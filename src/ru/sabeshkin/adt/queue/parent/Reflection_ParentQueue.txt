Иерархия Queue и Deque
В момем варианте я использовал общий метод, который хранит значение
независимо от того получено оно с хвоста или из головы очереди.
Наверное для удобства лучше разбивать подобные запросы на два различных,
т.к. это позволяет не заводить дополнительную переменную в коде "обвеса", 
а, например, один раз достав переменную из головы, а после этого несколько
раз из хвоста - родным функционалом сразу получить крайнее значение, которое получал их головы.

При своей реализации я решил, что два метода не требуются, т.к. получено
значение справа или слева, мы можем понять по проверке статусов(вызывался метод или нет),
но сейчас понимаю, что после первого вызова и того и другого, эта информация уже потеряется.
Тем более при проектировании АТД мы можем ориентироваться на то что базовые операции не 
должны быть выражены одни через другие - как в пространстве при определении
базиса, один из критериев, что каждый из векторов его задающих
не может быть выражен через другие.
А если я использую только один метод get, то получается, что 
применял бы дополнительные методы, что бы понимать откуда конкретно полученно значение.
Выражал бы это через уже существующие методы.