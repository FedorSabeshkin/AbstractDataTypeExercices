В языке программирования Java можно применять 4 основных принципа добавления нового модуля. 
Пятый из них с некоторыми оговорками. Ниже обоснования по каждому пункту. 
1.  Новый модуль может задавать некоторый базовый тип, который потенциально должен допускать 
параметризацию другими типами (обобщённые типы, типы-генерики);

В Java есть поддержка дженериков.
--
2. Новый модуль может объединять несколько функций, которые активно обращаются друг к другу;

Пример: создание Utils.java классов
--
3. Новый модуль может входить в семейство модулей, 
ориентированных на решение некоторой общей задачи, которую не удаётся решить с помощью одного модуля;

На этом практически строится вся задачи реализации 
некоторой программы из модулей, которые будут решать некоторую задачу. 
--
4. Новый модуль может предлагать конкретную реализацию 
родительского модуля, которая должна выбираться динамически (полиморфно) -- например, реализация обобщённого типа для конкретного типа-параметра;

Так же как и в 1-ом принципе. Может создаваться абстрактный класс 
с дженериком, а его реализация под конкретный тип выбираться динамически.
--
5. Новый модуль может интегрировать общее поведение нескольких модулей, 
которые различаются лишь деталями.

Хотя не поддерживается наследование от нескольких классов, можно использовать 
несколько интерфейсов, которые потребует реализации некоторых методов, либо комбинацию из интерфейсов и одного класса родителя.  